#!/usr/bin/env python3

from baseline_np import decode, EXTENSION

import os
import glob
from zipfile import ZipFile


VALOUTZIP = 'valout.zip'


def get_files_info_string():
    ps = os.listdir('.')
    non_png = [p for p in ps if '.png' not in p]
    png = [p for p in ps if '.png' in p]
    return 'Found {} .png files and {}'.format(len(png), non_png)


def get_baseline_files():
    assert os.path.isfile(VALOUTZIP), 'Expected {}. {}'.format(
        VALOUTZIP, get_files_info_string())

    print('Unzipping', VALOUTZIP, '...')
    with ZipFile(VALOUTZIP) as zipfile:
        zipfile.extractall()

    baseline_files = glob.glob('*.' + EXTENSION)

    if len(baseline_files) == 0:
        raise ValueError('No .{} files found! {}'.format(
            EXTENSION, get_files_info_string()))

    print('Found {} .{} files // {} .png files'.format(
        len(baseline_files), EXTENSION, len(glob.glob('*.png'))))

    return baseline_files


def main():
    baseline_files = get_baseline_files()
    for f in baseline_files:
        decode(f)


if __name__ == '__main__':
    main()


